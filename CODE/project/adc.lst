C251 COMPILER V5.60.0,  adc                                                                27/07/23  09:08:22  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE adc
OBJECT MODULE PLACED IN .\adc.obj
COMPILER INVOKED BY: D:\keil\C251\BIN\C251.EXE ..\src\adc.c XSMALL INTR2 BROWSE INCDIR(..\inc) DEBUG PRINT(.\adc.lst) TA
                    -BS(2) OBJECT(.\adc.obj) 

stmt  level    source

    1          #include "adc.h"
    2          
    3          #define ADC_SPEED 15    /* 0~15, ADC×ª»»Ê±¼ä(CPUÊ±ÖÓÊý) = (n+1)*32  ADCCFG */
    4          #define RES_FMT   (1<<5)  /* ADC½á¹û¸ñÊ½ 0: ×ó¶ÔÆë, ADC_RES: D11 D10 D9 D8 D7 D6 D5 D4, ADC_RESL: D3 D2 D1 
             -D0 0 0 0 0 */
    5                        /* ADCCFG      1: ÓÒ¶ÔÆë, ADC_RES: 0 0 0 0 D11 D10 D9 D8, ADC_RESL: D7 D6 D5 D4 D3 D2 D1 D0 */
    6          //ADC³õÊ¼»¯
    7          void ADC_Init()
    8          {
    9   1          ADCTIM = 0x3f;  //ÉèÖÃÍ¨µÀÑ¡ÔñÊ±¼ä¡¢±£³ÖÊ±¼ä¡¢²ÉÑùÊ±¼ä
   10   1        ADCCFG = RES_FMT + ADC_SPEED;
   11   1        //ADCÄ£¿éµçÔ´´ò¿ªºó£¬ÐèµÈ´ý1ms£¬MCUÄÚ²¿ADCµçÔ´ÎÈ¶¨ºóÔÙ½øÐÐAD×ª»»
   12   1        ADC_CONTR = 0x80 + 0; //ADC on + channel
   13   1      }
   14          
   15          
   16          //========================================================================
   17          // º¯Êý: unsigned int Get_ADC12bitResult(u8 channel)) //channel = 0~15
   18          // ÃèÊö: ²éÑ¯·¨¶ÁÒ»´ÎADC½á¹û.
   19          // ²ÎÊý: channel: Ñ¡ÔñÒª×ª»»µÄADC, 0~15.
   20          // ·µ»Ø: 12Î»ADC½á¹û.
   21          // °æ±¾: V1.0, 2016-4-28
   22          //========================================================================
   23          unsigned int Get_ADC12bitResult(unsigned char channel)  //channel = 0~15
   24          {
   25   1        ADC_RES = 0;
   26   1        ADC_RESL = 0;
   27   1      
   28   1          ADC_CONTR = (ADC_CONTR & 0xf0) | channel; //ÉèÖÃADC×ª»»Í¨µÀ
   29   1          ADC_START = 1;//Æô¶¯ADC×ª»»
   30   1          _nop_();
   31   1        _nop_();
   32   1        _nop_();
   33   1        _nop_();
   34   1          while(ADC_FLAG == 0);   //wait for ADC finish
   35   1          ADC_FLAG = 0;     //Çå³ýADC½áÊø±êÖ¾
   36   1        return (((unsigned int)ADC_RES << 8) | ADC_RESL);
   37   1      }
   38          
   39          //#define   SUM_LENGTH  16  /* Æ½¾ùÖµ²ÉÑù´ÎÊý ×î´óÖµ16 */
   40          
   41          /***********************************
   42          ²éÑ¯·½Ê½×öÒ»´ÎADC, chnÎªÍ¨µÀºÅ, chn=0~7¶ÔÓ¦P1.0~P1.7, chn=8~14¶ÔÓ¦P0.0~P0.6, chn=15¶ÔÓ¦BandGapµçÑ¹.
   43          ***********************************/
   44          // void ADC_convert(u8 chn)
   45          // {
   46          //  unsigned int  j;
   47          //  u8  k;    //Æ½¾ùÖµÂË²¨Ê±Ê¹ÓÃ
   48          
   49          //  Get_ADC12bitResult(chn);    //²ÎÊýi=0~15,²éÑ¯·½Ê½×öÒ»´ÎADC, ÇÐ»»Í¨µÀºóµÚÒ»´Î×ª»»½á¹û¶ªÆú. ±ÜÃâ²ÉÑùµçÈÝµ
             -Ä²Ð´æµçÑ¹Ó°Ïì.
   50          //  Get_ADC12bitResult(chn);    //²ÎÊýi=0~15,²éÑ¯·½Ê½×öÒ»´ÎADC, ÇÐ»»Í¨µÀºóµÚ¶þ´Î×ª»»½á¹û¶ªÆú. ±ÜÃâ²ÉÑùµçÈÝµ
             -Ä²Ð´æµçÑ¹Ó°Ïì.
   51          //  for(k=0, j=0; k<SUM_LENGTH; k++)  j += Get_ADC12bitResult(chn); // ²ÉÑùÀÛ¼ÓºÍ, ²ÎÊý0~15,²éÑ¯·½Ê½×öÒ»´Î
             -ADC, ·µ»ØÖµ¾ÍÊÇ½á¹û
   52          //  j = j / SUM_LENGTH;   // ÇóÆ½¾ù
   53          
   54          //  if(chn == 15) printf("Bandgap=%04d  ",j); //ÄÚ»ù×¼ 1.19V
C251 COMPILER V5.60.0,  adc                                                                27/07/23  09:08:22  PAGE 2   

   55          //  else    //ADC0~ADC14
   56          //  {
   57          //    printf("ADC%02d=%04d  ",chn,j);
   58          //  }
   59          // }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =        66     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
