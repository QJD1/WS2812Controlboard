C251 COMPILER V5.60.0,  main                                                               24/07/23  17:25:02  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\main.obj
COMPILER INVOKED BY: D:\keil\C251\BIN\C251.EXE ..\src\main.c XSMALL INTR2 BROWSE INCDIR(..\inc) DEBUG PRINT(.\main.lst) 
                    -TABS(2) OBJECT(.\main.obj) 

stmt  level    source

    1          // #include "main.h"
    2          
    3          
    4          // #define UART1_BUF_LENGTH    128
    5          
    6          // //==========================================================================
    7          
    8          // /*************  本地常量声明    **************/
    9          
   10          
   11          // /*************  IO口定义    **************/
   12          
   13          // /*************  本地变量声明    **************/
   14          
   15          // u8  TX1_Cnt;    //发送计数
   16          // u8  RX1_Cnt;    //接收计数
   17          // bit B_TX1_Busy; //发送忙标志
   18          
   19          // u8  RX1_Buffer[UART1_BUF_LENGTH]; //接收缓冲
   20          
   21          // /*************  本地函数声明    **************/
   22          
   23          // void UART1_config(u8 brt);   // 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
   24          // void PrintString1(u8 *puts);
   25          
   26          // /****************  外部函数声明和外部变量声明 *****************/
   27          
   28          
   29          // /******************** 主函数 **************************/
   30          // void main(void)
   31          // {
   32          //     WTST = 0;  //设置程序指令延时参数，赋值为0可将CPU执行指令的速度设置为最快
   33          //     EAXFR = 1; //扩展寄存器(XFR)访问使能
   34          //     CKCON = 0; //提高访问XRAM速度
   35          
   36          //     P0M1 = 0x30;   P0M0 = 0x30;   //设置P0.4、P0.5为漏极开路(实验箱加了上拉电阻到3.3V)
   37          //     P1M1 = 0x30;   P1M0 = 0x30;   //设置P1.4、P1.5为漏极开路(实验箱加了上拉电阻到3.3V)
   38          //     P2M1 = 0x3c;   P2M0 = 0x3c;   //设置P2.2~P2.5为漏极开路(实验箱加了上拉电阻到3.3V)
   39          //     P3M1 = 0x50;   P3M0 = 0x50;   //设置P3.4、P3.6为漏极开路(实验箱加了上拉电阻到3.3V)
   40          //     P4M1 = 0x3c;   P4M0 = 0x3c;   //设置P4.2~P4.5为漏极开路(实验箱加了上拉电阻到3.3V)
   41          //     P5M1 = 0x0c;   P5M0 = 0x0c;   //设置P5.2、P5.3为漏极开路(实验箱加了上拉电阻到3.3V)
   42          //     P6M1 = 0xff;   P6M0 = 0xff;   //设置为漏极开路(实验箱加了上拉电阻到3.3V)
   43          //     P7M1 = 0x00;   P7M0 = 0x00;   //设置为准双向口
   44          
   45          //     UART1_config(2);    // 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
   46              
   47          
   48          //     PrintString1("STC32G UART1 Test Programme!\r\n");  //UART1发送一个字符串
   49          
   50          //     while (1)
   51          //     {
   52          //         if((TX1_Cnt != RX1_Cnt) && (!B_TX1_Busy))   //收到数据, 发送空闲
   53          //         {
   54          //             SBUF = RX1_Buffer[TX1_Cnt];
   55          //             B_TX1_Busy = 1;
   56          //             if(++TX1_Cnt >= UART1_BUF_LENGTH)   TX1_Cnt = 0;
   57          //         }
   58          //     }
C251 COMPILER V5.60.0,  main                                                               24/07/23  17:25:02  PAGE 2   

   59          // }
   60          
   61          // //========================================================================
   62          // // 函数: void PrintString1(u8 *puts)
   63          // // 描述: 串口1发送字符串函数。
   64          // // 参数: puts:  字符串指针.
   65          // // 返回: none.
   66          // // 版本: VER1.0
   67          // // 日期: 2014-11-28
   68          // // 备注: 
   69          // //========================================================================
   70          // void PrintString1(u8 *puts)
   71          // {
   72          //     for (; *puts != 0;  puts++)     //遇到停止符0结束
   73          //     {
   74          //         SBUF = *puts;
   75          //         B_TX1_Busy = 1;
   76          //         while(B_TX1_Busy);
   77          //     }
   78          // }
   79          
   80          // //========================================================================
   81          // // 函数: SetTimer2Baudraye(u32 dat)
   82          // // 描述: 设置Timer2做波特率发生器。
   83          // // 参数: dat: Timer2的重装值.
   84          // // 返回: none.
   85          // // 版本: VER1.0
   86          // // 日期: 2014-11-28
   87          // // 备注: 
   88          // //========================================================================
   89          // void SetTimer2Baudraye(u32 dat)
   90          // {
   91          //     T2R = 0;   //Timer stop
   92          //     T2_CT = 0; //Timer2 set As Timer
   93          //     T2x12 = 1; //Timer2 set as 1T mode
   94          //     T2H = (u8)(dat / 256);
   95          //     T2L = (u8)(dat % 256);
   96          //     ET2 = 0;    //禁止中断
   97          //     T2R = 1;   //Timer run enable
   98          // }
   99          
  100          // //========================================================================
  101          // // 函数: void UART1_config(u8 brt)
  102          // // 描述: UART1初始化函数。
  103          // // 参数: brt: 选择波特率, 2: 使用Timer2做波特率, 其它值: 使用Timer1做波特率.
  104          // // 返回: none.
  105          // // 版本: VER1.0
  106          // // 日期: 2014-11-28
  107          // // 备注: 
  108          // //========================================================================
  109          // void UART1_config(u8 brt)
  110          // {
  111          //     /*********** 波特率使用定时器2 *****************/
  112          //     if(brt == 2)
  113          //     {
  114          //         S1BRT = 1; //S1 BRT Use Timer2;
  115          //         SetTimer2Baudraye(Baudrate1);
  116          //     }
  117          
  118          //     /*********** 波特率使用定时器1 *****************/
  119          //     else
  120          //     {
  121          //         TR1 = 0;
  122          //         S1BRT = 0;   //S1 BRT Use Timer1;
  123          //         T1_CT = 0;   //Timer1 set As Timer
  124          //         T1x12 = 1;   //Timer1 set as 1T mode
C251 COMPILER V5.60.0,  main                                                               24/07/23  17:25:02  PAGE 3   

  125          //         TMOD &= ~0x30;//Timer1_16bitAutoReload;
  126          //         TH1 = (u8)(Baudrate1 / 256);
  127          //         TL1 = (u8)(Baudrate1 % 256);
  128          //         ET1 = 0;    //禁止中断
  129          //         TR1 = 1;
  130          //     }
  131          //     /*************************************************/
  132          
  133          //     SCON = (SCON & 0x3f) | 0x40;    //UART1模式, 0x00: 同步移位输出, 0x40: 8位数据,可变波特率, 0x80: 9
             -位数据,固定波特率, 0xc0: 9位数据,可变波特率
  134          // //  PS  = 1;    //高优先级中断
  135          //     ES  = 1;    //允许中断
  136          //     REN = 1;    //允许接收
  137          //     P_SW1 &= 0x3f;
  138          // //  P_SW1 |= 0x00;      //UART1 switch to, 0x00: P3.0 P3.1, 0x40: P3.6 P3.7, 0x80: P1.6 P1.7, 0xC0: P4
             -.3 P4.4
  139          
  140          //     B_TX1_Busy = 0;
  141          //     TX1_Cnt = 0;
  142          //     RX1_Cnt = 0;
  143          // }
  144          
  145          
  146          // //========================================================================
  147          // // 函数: void UART1_int (void) interrupt UART1_VECTOR
  148          // // 描述: UART1中断函数。
  149          // // 参数: nine.
  150          // // 返回: none.
  151          // // 版本: VER1.0
  152          // // 日期: 2014-11-28
  153          // // 备注: 
  154          // //========================================================================
  155          // void UART1_int (void) interrupt 4
  156          // {
  157          //     if(RI)
  158          //     {
  159          //         RI = 0;
  160          //         RX1_Buffer[RX1_Cnt] = SBUF;
  161          //         if(++RX1_Cnt >= UART1_BUF_LENGTH)   RX1_Cnt = 0;
  162          //     }
  163          
  164          //     if(TI)
  165          //     {
  166          //         TI = 0;
  167          //         B_TX1_Busy = 0;
  168          //     }
  169          // }
  170          
*** WARNING C38 IN LINE 170 OF ..\src\main.c: empty translation unit


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
C251 COMPILER V5.60.0,  main                                                               24/07/23  17:25:02  PAGE 4   

  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
