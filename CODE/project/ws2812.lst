C251 COMPILER V5.60.0,  ws2812                                                             27/07/23  09:10:54  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE ws2812
OBJECT MODULE PLACED IN .\ws2812.obj
COMPILER INVOKED BY: D:\keil\C251\BIN\C251.EXE ..\src\ws2812.c XSMALL INTR2 BROWSE INCDIR(..\inc) DEBUG PRINT(.\ws2812.l
                    -st) TABS(2) OBJECT(.\ws2812.obj) 

stmt  level    source

    1          #include "main.h"
    2          #include <stdlib.h>
    3          #include "math.h"
    4          
    5          #define SEND_BIT0 {P51 = 1; NOP8(); P51 = 0; NOP16();}
    6          #define SEND_BIT1 {P51 = 1; NOP19(); P51 = 0; NOP3();}
    7          
    8          unsigned char bdata green_dat , red_dat , blue_dat;
    9          
   10          sbit green_dat_bit0 = green_dat^0;
   11          sbit green_dat_bit1 = green_dat^1;
   12          sbit green_dat_bit2 = green_dat^2;
   13          sbit green_dat_bit3 = green_dat^3;
   14          sbit green_dat_bit4 = green_dat^4;
   15          sbit green_dat_bit5 = green_dat^5;
   16          sbit green_dat_bit6 = green_dat^6;
   17          sbit green_dat_bit7 = green_dat^7;
   18          
   19          sbit red_dat_bit0 = red_dat^0;
   20          sbit red_dat_bit1 = red_dat^1;
   21          sbit red_dat_bit2 = red_dat^2;
   22          sbit red_dat_bit3 = red_dat^3;
   23          sbit red_dat_bit4 = red_dat^4;
   24          sbit red_dat_bit5 = red_dat^5;
   25          sbit red_dat_bit6 = red_dat^6;
   26          sbit red_dat_bit7 = red_dat^7;
   27          
   28          sbit blue_dat_bit0 = blue_dat^0;
   29          sbit blue_dat_bit1 = blue_dat^1;
   30          sbit blue_dat_bit2 = blue_dat^2;
   31          sbit blue_dat_bit3 = blue_dat^3;
   32          sbit blue_dat_bit4 = blue_dat^4;
   33          sbit blue_dat_bit5 = blue_dat^5;
   34          sbit blue_dat_bit6 = blue_dat^6;
   35          sbit blue_dat_bit7 = blue_dat^7;
   36          
   37          
   38          void WS2812_WriteColor(unsigned char green , unsigned char red , unsigned char blue)
   39          {
   40   1          green_dat = green;
   41   1          red_dat = red;
   42   1          blue_dat = blue;
   43   1          //发送绿色
   44   1          if(green_dat_bit7){SEND_BIT1}else{SEND_BIT0};
   45   1          if(green_dat_bit6){SEND_BIT1}else{SEND_BIT0};
   46   1          if(green_dat_bit5){SEND_BIT1}else{SEND_BIT0};
   47   1          if(green_dat_bit4){SEND_BIT1}else{SEND_BIT0};
   48   1          if(green_dat_bit3){SEND_BIT1}else{SEND_BIT0};
   49   1          if(green_dat_bit2){SEND_BIT1}else{SEND_BIT0};
   50   1          if(green_dat_bit1){SEND_BIT1}else{SEND_BIT0};
   51   1        if(green_dat_bit0){SEND_BIT1}else{SEND_BIT0};
   52   1          //发送红色
   53   1          if(red_dat_bit7){SEND_BIT1}else{SEND_BIT0};
   54   1          if(red_dat_bit6){SEND_BIT1}else{SEND_BIT0};
   55   1          if(red_dat_bit5){SEND_BIT1}else{SEND_BIT0};
   56   1          if(red_dat_bit4){SEND_BIT1}else{SEND_BIT0};
   57   1          if(red_dat_bit3){SEND_BIT1}else{SEND_BIT0};
   58   1          if(red_dat_bit2){SEND_BIT1}else{SEND_BIT0};
C251 COMPILER V5.60.0,  ws2812                                                             27/07/23  09:10:54  PAGE 2   

   59   1          if(red_dat_bit1){SEND_BIT1}else{SEND_BIT0};
   60   1        if(red_dat_bit0){SEND_BIT1}else{SEND_BIT0};
   61   1          //发送蓝色
   62   1          if(blue_dat_bit7){SEND_BIT1}else{SEND_BIT0};
   63   1          if(blue_dat_bit6){SEND_BIT1}else{SEND_BIT0};
   64   1          if(blue_dat_bit5){SEND_BIT1}else{SEND_BIT0};
   65   1          if(blue_dat_bit4){SEND_BIT1}else{SEND_BIT0};
   66   1          if(blue_dat_bit3){SEND_BIT1}else{SEND_BIT0};
   67   1          if(blue_dat_bit2){SEND_BIT1}else{SEND_BIT0};
   68   1          if(blue_dat_bit1){SEND_BIT1}else{SEND_BIT0};
   69   1        if(blue_dat_bit0){SEND_BIT1}else{SEND_BIT0};
   70   1      
   71   1      }
   72          
   73          #define WS2812_NUM 30//灯珠数量
   74          
   75          enum WS2812_RunMode mode = voiceCtrl_mode;
   76          unsigned char voiceGrade = 0;//音量等级
   77          unsigned char brightness = 80;//亮度
   78          unsigned char color_G[WS2812_NUM];
   79          unsigned char color_R[WS2812_NUM];
   80          unsigned char color_B[WS2812_NUM];
   81          
   82          //显示
   83          void WS2812_Show()
   84          {
   85   1          unsigned char i;
   86   1          for ( i = 0; i < WS2812_NUM; i++)
   87   1          {
   88   2              WS2812_WriteColor(color_G[i],color_R[i],color_B[i]);
   89   2          }
   90   1          Delay300us();
   91   1      }
   92          
   93          void WS2812_RunTask()
   94          {
   95   1          unsigned char i;
   96   1          unsigned char randNum_G,randNum_R,randNum_B;
   97   1          bit firework_busy = 0;
   98   1          unsigned char firework_index = 0;
   99   1      
  100   1          while(1)
  101   1          {
  102   2              //选择模式 ，然后给三个颜色赋值
  103   2              switch (mode)
  104   2              {
  105   3                  //关闭模式
  106   3              case close_mode:
  107   3                  for(i = 0 ; i<WS2812_NUM ; i++)
  108   3                  {
  109   4                      color_G[i] = 0;
  110   4                      color_R[i] = 0;
  111   4                      color_B[i] = 0;
  112   4                  }
  113   3                  break;
  114   3      
  115   3                  //声控模式
  116   3              case voiceCtrl_mode:
  117   3                  voiceGrade = Get_ADC12bitResult(0)/(2300/WS2812_NUM);
  118   3                  if(voiceGrade > WS2812_NUM) voiceGrade = WS2812_NUM;
  119   3                  //随机颜色
  120   3                  srand(Get_ADC12bitResult(0));
  121   3                  randNum_G = ((rand()*rand())/256) * brightness / 100;
  122   3      
  123   3                  srand(10*sin(Get_ADC12bitResult(0))+10);
  124   3                  randNum_R = ((rand()*rand())/256) * brightness / 100;
C251 COMPILER V5.60.0,  ws2812                                                             27/07/23  09:10:54  PAGE 3   

  125   3      
  126   3                  srand(10*cos(Get_ADC12bitResult(0))+10);
  127   3                  randNum_B = ((rand()*rand())/256) * brightness / 100;
  128   3      
  129   3                  for ( i = 0; i < WS2812_NUM; i++)
  130   3                  {
  131   4                      if(i<voiceGrade) 
  132   4                      {
  133   5                          color_G[i] = randNum_G;
  134   5                          color_R[i] = randNum_R;
  135   5                          color_B[i] = randNum_B;
  136   5                      }   
  137   4                      else 
  138   4                      {
  139   5                          color_G[i] = 0;
  140   5                          color_R[i] = 0;
  141   5                          color_B[i] = 0;
  142   5                      }
  143   4                  }
  144   3                  //printf("G:%d R:%d B:%d\r\n",randNum_G,randNum_R,randNum_B);
  145   3            //printf("grade:%d  adc:%d\r\n",voiceGrade,Get_ADC12bitResult(0));  
  146   3                  break;
  147   3              
  148   3              //烟花模式
  149   3              case firework_mode:
  150   3                  if(firework_busy)
  151   3                  {
  152   4                      if(firework_index <= WS2812_NUM+(WS2812_NUM/3))
  153   4                      {
  154   5                          for ( i = 0; i < WS2812_NUM; i++)
  155   5                          {
  156   6                              if(i>=firework_index && i<(firework_index+(WS2812_NUM/3)) )
  157   6                              {
  158   7                                  color_G[i] = randNum_G;
  159   7                                  color_R[i] = randNum_R;
  160   7                                  color_B[i] = randNum_B;
  161   7                              }   
  162   6                              else 
  163   6                              {
  164   7                                  color_G[i] = 0;
  165   7                                  color_R[i] = 0;
  166   7                                  color_B[i] = 0;
  167   7                              }
  168   6                          }
  169   5                          firework_index++;
  170   5                          Delay_ms(50);
  171   5                      }
  172   4                      else 
  173   4                      {
  174   5                          firework_busy = 0;
  175   5                      }
  176   4                  }
  177   3                  else 
  178   3                  {
  179   4                      voiceGrade = Get_ADC12bitResult(0)/(2300/WS2812_NUM);
  180   4                      if(voiceGrade >= WS2812_NUM - (WS2812_NUM/3))
  181   4                      {
  182   5                          firework_busy = 1;
  183   5                          firework_index = 0;
  184   5                          //随机颜色
  185   5                          srand(Get_ADC12bitResult(0));
  186   5                          randNum_G = ((rand()*rand())/256) * brightness / 100;
  187   5      
  188   5                          srand(10*sin(Get_ADC12bitResult(0))+10);
  189   5                          randNum_R = ((rand()*rand())/256) * brightness / 100;
  190   5      
C251 COMPILER V5.60.0,  ws2812                                                             27/07/23  09:10:54  PAGE 4   

  191   5                          srand(10*cos(Get_ADC12bitResult(0))+10);
  192   5                          randNum_B = ((rand()*rand())/256) * brightness / 100;
  193   5      
  194   5                          if(randNum_G == randNum_R == randNum_B == 0)    randNum_R = 255 * brightness / 100;
  195   5                      }
  196   4                  }
  197   3                  break;
  198   3      
  199   3      
  200   3              case test_mode:
  201   3      
  202   3                  break;
  203   3              default:
  204   3                  break;
  205   3              }
  206   2      
  207   2              //显示
  208   2              WS2812_Show();
  209   2          }
  210   1      }
  211          
  212          
  213          
  214          void WS2812_setMode(enum WS2812_RunMode modeToSet)
  215          {
  216   1          mode = modeToSet;
  217   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      2085     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        94          3
  bit size             =    ------          1
  ebit size            =    ------     ------
  bitaddressable size  =         3     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        16     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
